name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

# permissions pour pouvoir pousser des paquets (utile plus tard pour GHCR)
permissions:
  contents: read
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Build & Test (profile ci)
        run: mvn -B -Pci clean verify

      - name: Upload Surefire reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: "**/target/surefire-reports/**"

      - name: Upload Jacoco report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: "**/target/site/jacoco/**"

      - name: Upload Checkstyle report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: |
            **/target/checkstyle-result.xml
            **/target/site/checkstyle.html

      - name: Upload SpotBugs report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: spotbugs-report
          path: |
            **/target/spotbugs/**
            **/target/spotbugsXml.xml
            **/target/spotbugs/*.html

      - name: Upload executable JAR
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: order-api-jar
          path: order-api/target/*-SNAPSHOT.jar

  build-docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Build JAR (skip tests)
        run: mvn -pl order-api -am -DskipTests clean package

      - name: Build Docker image with Buildpacks
        run: |
          mvn -pl order-api -am -DskipTests spring-boot:build-image \
            -Dspring-boot.build-image.imageName=order-api:ci
